apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: atlasapps.atlas.io
spec:
  group: atlas.io
  names:
    kind: AtlasApp
    listKind: AtlasAppList
    plural: atlasapps
    singular: atlasapp
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.environment
      name: Environment
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .spec.migrationId
      name: Migration
      type: integer
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .status.readyReplicas
      name: Replicas
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasApp defines an Atlas application deployment
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasAppSpec defines the desired state of AtlasApp
            properties:
              autoPromote:
                description: AutoPromote enables automatic promotion to next environment
                type: boolean
              environment:
                description: Environment specifies the deployment environment (dev,
                  stage, prod)
                type: string
              healthCheckPath:
                description: HealthCheckPath specifies the health check endpoint
                type: string
              migrationId:
                description: MigrationId specifies the database migration version
                type: integer
              nextEnvironment:
                description: NextEnvironment specifies the next environment for promotion
                type: string
              replicas:
                description: Replicas specifies the number of replicas to deploy
                format: int32
                type: integer
              requireApproval:
                description: RequireApproval requires manual approval for deployment
                type: boolean
              version:
                description: Version specifies the application version to deploy
                type: string
            required:
            - environment
            - migrationId
            - version
            type: object
          status:
            description: AtlasAppStatus defines the observed state of AtlasApp
            properties:
              approvalRequired:
                description: ApprovalRequired indicates if manual approval is needed
                type: boolean
              conditions:
                description: Conditions represents the current conditions of the application
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastUpdate:
                description: LastUpdate indicates when the deployment was last updated
                format: date-time
                type: string
              message:
                description: Message provides additional information about the current
                  state
                type: string
              phase:
                description: Phase represents the current phase of the application
                type: string
              promotionPending:
                description: PromotionPending indicates if promotion to next env is
                  pending
                type: boolean
              ready:
                description: Ready indicates if the application is ready and healthy
                type: boolean
              readyReplicas:
                description: ReadyReplicas indicates the number of ready replicas
                format: int32
                type: integer
              totalReplicas:
                description: TotalReplicas indicates the total number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
